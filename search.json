[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "A key objective of Openscapes JupyterHubs is to minimize “the time to science” for researchers, and cloud infrastructure can facilitate shortening this time. We use 2i2c-managed JupyterHubs hosted on Amazon Web Services (AWS). The purpose of the JupyterHubs is to provide initial, exploratory experiences with cloud computing, and to provide a platform for running workshops. It is not meant to be a long-term solution to support on-going science work or software development. For those users that decide working in the cloud is advantageous and want to move some of their work there, we are also working on what that can look like (fledging).\nHub Management: 2i2c is a nonprofit that designs, develops, and operates JupyterHubs (“Hubs”) in the cloud for research and education, including Openscapes. 2i2c ensures that Hubs are cloud-vendor agnostic and are built using open-source software such as JupyterHub and Kubernetes.\nUser Management and Access: Users are given access to a Hub based on their reason for accessing the Hub, and the length of time they will need access. Short-term access for shorter workshops is differentiated from longer-term access for cloud experimentation, Openscapes Champions Cohorts, and longer workshops. See our Access Policies for details.\nHub Location and Right to Replicate: Our JupyterHubs are hosted on AWS and are in-region with NASA Earthdata (AWS US-West-2). 2i2c gives users the right to replicate their infrastructure. This means that our Hubs could be replicated on GoogleEarthEngine or Microsoft Azure, or ported to another AWS region.\nWith this setup, we have flexibility to support a diverse range of user needs. The NASA Openscapes Hub has been used by the NASA Openscapes Mentors and other NASA data center (DAAC) staff internally as a testing ground for developing cloud tutorials and workflows, but also externally in the research community for workshops like those for science teams and “Hackathons”, a term used here to describe multi-day events with split time for teaching and helping researchers implement concepts into their research projects.\nThis section drew from the ‘Solution’ section of the White Paper entitled, “The Value of Hosted JupyterHubs in enabling Open NASA Earth Science in the Cloud” (Nickles, et.al, 2022)."
  },
  {
    "objectID": "about.html#jupyterhubs",
    "href": "about.html#jupyterhubs",
    "title": "About",
    "section": "",
    "text": "A key objective of Openscapes JupyterHubs is to minimize “the time to science” for researchers, and cloud infrastructure can facilitate shortening this time. We use 2i2c-managed JupyterHubs hosted on Amazon Web Services (AWS). The purpose of the JupyterHubs is to provide initial, exploratory experiences with cloud computing, and to provide a platform for running workshops. It is not meant to be a long-term solution to support on-going science work or software development. For those users that decide working in the cloud is advantageous and want to move some of their work there, we are also working on what that can look like (fledging).\nHub Management: 2i2c is a nonprofit that designs, develops, and operates JupyterHubs (“Hubs”) in the cloud for research and education, including Openscapes. 2i2c ensures that Hubs are cloud-vendor agnostic and are built using open-source software such as JupyterHub and Kubernetes.\nUser Management and Access: Users are given access to a Hub based on their reason for accessing the Hub, and the length of time they will need access. Short-term access for shorter workshops is differentiated from longer-term access for cloud experimentation, Openscapes Champions Cohorts, and longer workshops. See our Access Policies for details.\nHub Location and Right to Replicate: Our JupyterHubs are hosted on AWS and are in-region with NASA Earthdata (AWS US-West-2). 2i2c gives users the right to replicate their infrastructure. This means that our Hubs could be replicated on GoogleEarthEngine or Microsoft Azure, or ported to another AWS region.\nWith this setup, we have flexibility to support a diverse range of user needs. The NASA Openscapes Hub has been used by the NASA Openscapes Mentors and other NASA data center (DAAC) staff internally as a testing ground for developing cloud tutorials and workflows, but also externally in the research community for workshops like those for science teams and “Hackathons”, a term used here to describe multi-day events with split time for teaching and helping researchers implement concepts into their research projects.\nThis section drew from the ‘Solution’ section of the White Paper entitled, “The Value of Hosted JupyterHubs in enabling Open NASA Earth Science in the Cloud” (Nickles, et.al, 2022)."
  },
  {
    "objectID": "about.html#computing-environment",
    "href": "about.html#computing-environment",
    "title": "About",
    "section": "Computing environment",
    "text": "Computing environment\nThe computing environment in the JuptyerHubs is provided by Docker container images, enabling a reproducible software environment for all users on the hub — the only software requirements to use the Hub are access to a computer and the internet. The images contain the development environment (JupyterLab, RStudio, VSCode etc), as well as the software stack and required dependencies for R and Python based workflows, and optionally other software such as MATLAB and QGIS. Each Hub has a set of images users can choose from when they log in, or users can provide their own image.\n\nCore Images\n\nNASA-Openscapes\n\ncorn: The base image for Python-based workflows using NASA Earthdata.\npy-rocket: The base image for R-based workflows using NASA Earthdata.\n\n\n\nNMFS-Openscapes\n\nTBD…"
  },
  {
    "objectID": "about.html#openscapes",
    "href": "about.html#openscapes",
    "title": "About",
    "section": "Openscapes",
    "text": "Openscapes\nThe Openscapes Team oversees the management of the Hub and Cloud costs.\nOpenscapes is an open source approach and movement that helps researchers and those supporting research find each other and feel empowered to conduct data-intensive science. Through a creative approach drawing inspiration and skills from many places, we provide structures for technical skill-building, collaborative teamwork, and inclusive community development. Our work builds from many others in the open movement.\nLearn more about Openscapes initiatives through our many other open resources, media, and events, and connect with us."
  },
  {
    "objectID": "about.html#primary-contacts",
    "href": "about.html#primary-contacts",
    "title": "About",
    "section": "Primary contacts",
    "text": "Primary contacts\n\nOpenscapes\n\nJulia Lowndes\nAndy Teucher\n\n\n\nNASA\n\nLuis Lopez\n\n\n\nNMFS\n\nEli Holmes"
  },
  {
    "objectID": "password-access.html",
    "href": "password-access.html",
    "title": "Password-based Access",
    "section": "",
    "text": "If you are hosting a workshop that has a large number of participants, especially if workflows with GitHub are not part of the teaching curriculum, use the “shared password” access. This access method allows the instructors to share a single password with learners at the start of the workshop which they can use to log on the the Hub. Note that while this access method is nicely streamlined for workshop leads and participants, Hub admins do not have any way to contact the people added to the Hub. Thus, participants with this method are only allowed to stay in the Hub f or one week before being removed.\n\nCheck with the primary contact for your hub to ensure that the Hub image has the packages you need\nReach out to 2i2c a month in advance via an email to support at 2i2c.freshdesk.com (example below) to tell them about the workshop date, start and end times, # of participants, and anticipated level of resources to be used. Also tell them that you would like to use the shared password hub, and provide a desired password.\n\n\n\n\n\n\n\nExample email to 2i2c for a workshop with shared password authentication\n\n\n\n\n\nHello,\nThe LP DAAC and Openscapes have an upcoming event where we are planning to use the Openscapes Hub. Here’s the main information:\nThe GitHub handle or name of the community representative: [github username], email@somedomain.com\nThe date when the event will start: July 7, 2024\nThe date when the event will end: July ​7, 2024\nWhat hours of the day will participants be active? 1:00pm - 5pm EEST (Athens, Greece).\nNumber of attendees: ~40\nResources per user: 14.8GB RAM / up to 3.7 CPU\nThe URL of the hub that will be used for the event: https://workshop.openscapes.2i2c.cloud/\nAccess method: shared password\nPassword choice: [YouChooseAPassword]\nThank you!\nErik\n\n\n\nTell your learners that they will be able to access the Hub using the shared password for one week following the workshop, after which the password will be changed and the their home directories inside the Hub will be removed.\nOne week after the workshop, send another email to support at 2i2c.freshdesk.com and request that the password be reset and users’ home directories from the workshop be removed."
  },
  {
    "objectID": "password-access.html#using-the-openscapes-2i2c-hub-in-a-workshop-using-a-shared-password",
    "href": "password-access.html#using-the-openscapes-2i2c-hub-in-a-workshop-using-a-shared-password",
    "title": "Password-based Access",
    "section": "",
    "text": "If you are hosting a workshop that has a large number of participants, especially if workflows with GitHub are not part of the teaching curriculum, use the “shared password” access. This access method allows the instructors to share a single password with learners at the start of the workshop which they can use to log on the the Hub. Note that while this access method is nicely streamlined for workshop leads and participants, Hub admins do not have any way to contact the people added to the Hub. Thus, participants with this method are only allowed to stay in the Hub f or one week before being removed.\n\nCheck with the primary contact for your hub to ensure that the Hub image has the packages you need\nReach out to 2i2c a month in advance via an email to support at 2i2c.freshdesk.com (example below) to tell them about the workshop date, start and end times, # of participants, and anticipated level of resources to be used. Also tell them that you would like to use the shared password hub, and provide a desired password.\n\n\n\n\n\n\n\nExample email to 2i2c for a workshop with shared password authentication\n\n\n\n\n\nHello,\nThe LP DAAC and Openscapes have an upcoming event where we are planning to use the Openscapes Hub. Here’s the main information:\nThe GitHub handle or name of the community representative: [github username], email@somedomain.com\nThe date when the event will start: July 7, 2024\nThe date when the event will end: July ​7, 2024\nWhat hours of the day will participants be active? 1:00pm - 5pm EEST (Athens, Greece).\nNumber of attendees: ~40\nResources per user: 14.8GB RAM / up to 3.7 CPU\nThe URL of the hub that will be used for the event: https://workshop.openscapes.2i2c.cloud/\nAccess method: shared password\nPassword choice: [YouChooseAPassword]\nThank you!\nErik\n\n\n\nTell your learners that they will be able to access the Hub using the shared password for one week following the workshop, after which the password will be changed and the their home directories inside the Hub will be removed.\nOne week after the workshop, send another email to support at 2i2c.freshdesk.com and request that the password be reset and users’ home directories from the workshop be removed."
  },
  {
    "objectID": "password-access.html#workshop-hub-access-via-github-teams",
    "href": "password-access.html#workshop-hub-access-via-github-teams",
    "title": "Password-based Access",
    "section": "Workshop Hub Access via GitHub Teams",
    "text": "Workshop Hub Access via GitHub Teams\nIf you are hosting a workshop with where you will be teaching GitHub workflows, and/or have learners who require longer-term access to the Hub after the workshop, follow the instructions to add participants to the 2i2c Hub via a GitHub Team."
  },
  {
    "objectID": "access-policies.html",
    "href": "access-policies.html",
    "title": "Access Policies",
    "section": "",
    "text": "JupyterHub access has two general categories of use, with different means of access depending on the specifics of each use case:"
  },
  {
    "objectID": "access-policies.html#obtaining-access-to-an-openscapes-hub",
    "href": "access-policies.html#obtaining-access-to-an-openscapes-hub",
    "title": "Access Policies",
    "section": "Obtaining Access to an Openscapes Hub",
    "text": "Obtaining Access to an Openscapes Hub\n\nAccess via a GitHub Team\nAccess is controlled by the Openscapes Team, who oversee the management of the Hub and Cloud costs.\nThere is a GitHub organization for each Hub, and within each organization our JupyterHub users are managed in two (or more) GitHub Teams:\n\nLong-term access: This access is for Openscapes mentors and team, staff and others who request a longer-term engagement.\nOpenscapes Champions: This access is for teams that participate in the NASA or NOAA Openscapes Champions Program. These teams have access for up to a year as they experiment with migrating their workflows to the Cloud.\nWorkshops that teach GitHub workflows: We create additional GitHub teams to manage participants’ access. These teams have access for 3 months as they experiment with migrating their workflows to the Cloud.\n\nInstructions for admins on how to add people to the hub using GitHub\n\n\nAccess via a shared password\nAccess is provided on the day of the workshop with a common, global password. The password will be provided to participants at the start of the workshop, and participants will log in with their email address and the shared password. This access method allows us to ensure all workshop participants have easy access for the workshop, without having prior familiarity with GitHub. In general, access to the Hub with a workshop shared password will persist for seven days post-workshop.\nInstructions for admins on how to set up a shared-password workshop"
  },
  {
    "objectID": "access-policies.html#allowable-uses-of-2i2c-hub",
    "href": "access-policies.html#allowable-uses-of-2i2c-hub",
    "title": "Access Policies",
    "section": "Allowable Uses of 2i2c Hub",
    "text": "Allowable Uses of 2i2c Hub\nUsers who access the Openscapes Hubs agree to use the Hub only for work on activities related to the collaboration with Openscapes. Generally, recommended instance size is the smallest instance (1.9GB RAM and up to 3.75 CPUs).\nRunning large or parallel jobs over large geographic areas or over long temporal extents should be cleared with the Openscapes Team by submitting an issue to the 2i2cAccessPolicies repository."
  },
  {
    "objectID": "access-policies.html#removal-from-the-openscapes-hub",
    "href": "access-policies.html#removal-from-the-openscapes-hub",
    "title": "Access Policies",
    "section": "Removal From the Openscapes Hub",
    "text": "Removal From the Openscapes Hub\nThe Openscapes Hubs are a shared, limited resource that incur real costs. Users are granted access under the terms above and are removed at the end of those limits. Users that haven’t accessed the Hub in more than six months are also removed for security purposes.\nWe will do our best to alert users before they lose access to the Openscapes Hub. However, we reserve the right to remove users at any time for any reason. Users that violate the terms of access or incur large Cloud costs without prior permission from the Openscapes Team will be removed immediately."
  },
  {
    "objectID": "access-policies.html#data-storage-policies",
    "href": "access-policies.html#data-storage-policies",
    "title": "Access Policies",
    "section": "Data storage policies",
    "text": "Data storage policies\nPolicies on data storage and use of the HOME directory can be found in the data policies page."
  },
  {
    "objectID": "github-access.html",
    "href": "github-access.html",
    "title": "GitHub-based Access",
    "section": "",
    "text": "Individual long-term access through GitHub Teams\n  Adding Champions or workshop participants to the hub as a batch\n  Troubleshooting\nThis page is written primarily for workshop leads (mentors and other partners) who are inviting people to the Hub, as a collaborator for developing workshop materials or as a participant.\nIndividuals are given Hub access by adding them as members of the appropriate team in the relevant GitHub Organization. The most common teams we use to add users are those for long-term access for mentors and core team members in the NASA-Openscapes and NMFS-Openscapes GitHub organizations, and NASA Openscapes Champions in the nasa-openscapes-workshops GitHub organization.\nIf you want to add many people to a team at once, for a Champions cohort or for a workshop, jump to instructions for adding people in a batch"
  },
  {
    "objectID": "github-access.html#individual-long-term-access-through-github-teams",
    "href": "github-access.html#individual-long-term-access-through-github-teams",
    "title": "GitHub-based Access",
    "section": "Individual long-term access through GitHub Teams",
    "text": "Individual long-term access through GitHub Teams\n\n1. Share Google Form with users needing access\nAsk users: Please fill out the Google form for Openscapes JupyterHub Access. Users must have a GitHub username to fill out the form, as this is how they will be given access to the Hub. If they are requesting long-term access they should be sure to list their affiliation and who referred them, so administrators know that their request is within scope for the Hub.\n\nNASA-Openscapes form\nNMFS-Openscapes form\n\n\n\n2. Google Form response setup\nSet the form responses to notify you by email when there are responses: Click on Responses &gt; click three vertical dots and then check “email notification.”\n\n\n\n\n\n\n\n\n\n\n\n\n3. Email alert of new signup\nWhen you get an email click ‘view response’ (not view summary)\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nIf you are not sure if the access request is valid (i.e., the requestor does not appear to be an Openscapes mentor, staff member or close collaborator etc.), ask the mentor community in Slack to verify if the person requesting access is affiliated with any mentors’ work. If not, then send the requestor the following email, and do not add them to the GitHub team:\n\nDear XXX,\nThank you for your interest in our JupyterHub. Currently we provide access to people who participate in workshops taught by NASA Data Center (DAAC) staff through the NASA Openscapes community. We will be adding upcoming events you can sign up for here: https://nasa-openscapes.github.io/news.\nBest,\n\nNote in the “Notes” column in the Google form response sheet that this email was sent denying access, and the date.\n\nNASA-Openscapes responses sheet\nNMFS-Openscapes responses sheet\n\n\n\n\n\n4. Copy GitHub username\nOn the response page, copy the Github Username\n\n\n\n\n\n\n\n5. Add GitHub username to the GitHub Team\n\n\n\n\n\n\nTip\n\n\n\nIf you are adding many new mentors to the long-term access team, you can use the same steps as for adding workshop participants\n\n\nGo to the appropriate team in GitHub &gt; Click Add member &gt; Paste GitHub username.\n\nNASA-Openscapes GitHub Teams\nNASA-Openscapes-workshops GitHub Teams\nNMFS-Openscapes GitHub Teams\n\n\n\n\n\n\nGitHub may ask you for 2-factor authentication for the first one you add in a batch, not after that.\nPeople may see invitation notifications in two ways; in GitHub itself, and/or via email. They must accept the invitation to be able to access the Hub. This is what it looks like in their email inbox:\n\n\n\n\n\nThis is what the invitation looks like in the GitHub website interface - clicking the yellow banner notification leads to the invitation:\n\n\n\n\n\n\n\n\n\n\n\n\n6. Email confirmation\nGo back to the Google form response and grab their email address. Send the following email to the person:\n\n\n\n\n\n\nEmail for General requests: \n\n\n\n\n\nSubject: [NASA/NMFS] Openscapes Access to 2i2c Hub\nHi [FIRST NAME],\nI have added you to the [NASA/NMFS] Openscapes 2i2c Jupyter Hub. Here is the link to the hub: https://openscapes.cloud/\nThere is a getting started guide in the NASA Earthdata Cloud Cookbook here: https://nasa-openscapes.github.io/earthdata-cloud-cookbook/. You can see policies for hub use here: https://openscapes.cloud/access-policies.html, and policies and best practices for data storage here https://openscapes.cloud/data-storage.html\nWe’d love to know about the kind of work you are doing on the hub. Please add a brief description of your progress as you go at https://github.com/NASA-Openscapes/2i2cAccessPolicies/discussions/2. We will follow up in the next few months. \nBest,\n\n\n\n\n\n\n7. Register date in Form Response Sheet\nIn the Form Response Sheet (NASA/ NOAA), in column Added to 2i2c hub add the date they were added to the Hub, or if the request came via email add a new row - in part so that we as admins knew if someone had already fulfilled the request. Check Column A for the date of the form request.\n\n\nDirections for invitees\n\nPlease go to:\n\n\nNASA (workshops/champions): https://github.com/nasa-openscapes-workshops\nNASA (longterm access): https://github.com/nasa-openscapes-workshops\nNMFS: https://github.com/nmfs-openscapes\n\n\nClick the big yellow bar that says “you’ve been invited” \nNot seeing that bar? \n\nAre you logged into GitHub.com?\nHave you shared your GitHub username via the Google Form (NASA/NOAA)?\nYou can also check your email that you use for GitHub and look for an invitation from GitHub and Openscapes"
  },
  {
    "objectID": "github-access.html#adding-champions-or-workshop-participants-to-the-hub-as-a-batch",
    "href": "github-access.html#adding-champions-or-workshop-participants-to-the-hub-as-a-batch",
    "title": "GitHub-based Access",
    "section": "Adding Champions or workshop participants to the hub as a batch",
    "text": "Adding Champions or workshop participants to the hub as a batch\nParticipants in the NASA-Openscapes Champions program workshops are given Openscapes 2i2c JupyterHub access, as are participants in certain workshops run by NASA or NOAA Openscapes Mentors.\n\n\n\n\n\n\nNote\n\n\n\nWe have a newly developed process for giving people short-term access to the hub for workshops, with low overhead for instructors and participants. This process removes the need to add people to a GitHub team, and gives participants “just in time” access to a special workshop hub with a username and shared workshop-specific password. Instructions for this simplified setup are here.\n\n\nWe use a dedicated GitHub Organization - nasa-openscapes-workshops - to manage access, with GitHub Teams for NASA-Openscapes Champions Cohorts and certain workshops.\n\n1. Create a team in nasa-openscapes-workshops\n\nThere are several teams in this organization; the AdminTeam team is for members who have permission to create teams and add members to teams.\n\nIf this is for a new champions cohort, name the team nasa-champions-yyyy\nIf this is for a one-off workshop, name the team [workshop-name]-[workshop-date], with workshop date in the format yyyy-mm-dd\n\n\n\n2. Add team name to workshop registry\nWe keep a registry of all NASA-Openscapes workshops in this sheet. Add the name of the GitHub team to 2i2c access type column in the appropriate row.\n\n\nTell 2i2c about your upcoming workshop\n\nCheck with the primary contact for your hub to ensure that the Hub image has the packages you need\nReach out to 2i2c a month in advance via an email to support at 2i2c.freshdesk.com (example below) to tell them about the workshop date, start and end times, # of participants, and anticipated level of resources to be used. Also tell them that you will be using the normal hub and adding users through GitHub.\n\n\n\n\n\n\n\nExample email to 2i2c for a workshop with GitHub authentication\n\n\n\n\n\nHello,\nI wanted to reach out to the support desk to let you know that Openscapes will have a workshop using Python 2i2c instances for about 50 attendees.\nTitle: Data Access Workshop for NASA’s SWOT Satellite\nDate: February 13, 2024\nDuration/Time: half day, 9:00 am-12:30 pm HST (Honolulu, HI).\nExpected Usage: 3.7 GB per person (~50 people)\nThe URL of the hub that will be used for the event: https://openscapes.2i2c.cloud/\nAccess Method: GitHub Team named XXXXXX\nThank you!\nCassie\n\n\n\n\n\n3. Add teams to 2i2c Hub configuration\nMake a pull request to the relevant common.values.yaml configuration file in the 2i2c infrastructure repository:\n\nNASA-Openscapes common.values.yaml\nNMFS-Openscapes common.values.yaml\n\nAdd the new team to the allowed-teams item in whichever sections are appropriate for your workshop/cohort (likely all of them):\n\ndisplay_name: Python\ndisplay_name: R\ndisplay_name: Matlab\ndisplay_name: \"Bring your own image\"\n\nThese will determine which images are available to participants when they log in to the Hub.\nTeam specification is in the form [github-org]:[team] (e.g., nasa-openscapes-workshops:champions-access-2i2c-2024)\nYou also need to add the team to the allowed_organizations item under hub &gt; config &gt; GitHubOAuthenticator\nYou can see an example pull request here.\n\n\n4. Share Google Form with participants needing access for the cohort or workshop\nAsk users: Please add your GitHub Username to the Google form:\n\nGoogle form for NASA Openscapes JupyterHub Access\nGoogle form for NMFS Openscapes JupyterHub Access\n\n\n\n5. Add users to a Team in a batch using kyber\n\n\n\n\n\n\nTip\n\n\n\nDo this fairly close to the day of the workshop to try to get the greatest number participants to have filled out the form, and reduce the number of manual additions on the day of the workshop.\n\n\n\nOpen the spreadsheet of form responses (NASA/ NOAA), select the GitHub usernames from the rows containing the people you want to add, and copy it to your clipboard.\n\n\n\n\n\n\n\nTip\n\n\n\nSome workshop instructors will use their own form to record participants, rather than the Openscapes form. In that case use those responses instead. But do paste all those rows into this Main form; it is important that we have a record of everyone using the Hub and a way to contact them via email.\n\n\n\nIn R, do the following:\n\nlibrary(kyber)\nlibrary(datapasta)\n\n# Run datapasta::tribble_paste() or use the RStudio Addin 'Paste as tribble'\n\n# assign the pasted output to a new object:\nresponses &lt;- tribble::tribble(\n    # The stuff that was pasted\n)\nThe responses object will have a column of usernames. It likely won’t be called username, so you can rename it or even easier, change the name inside the tribble::tribble() call that you pasted. Verify these are the usernames you want to add, and run kyber::add_team_members() as follows, choosing the appropriate GitHub organization and team.\nteam_name &lt;- \"the name of the github team you want to add to\"\norg_name &lt;- \"the name of the github org that contains the team\"\n\nadd_team_members(\n  team_name, \n  members = responses$username, \n  org = org_name\n)\n\nGo the appropriate team in the relevant GitHub organization and verify that there are the appropriate “pending members”:\n\n\n\n\n\n\n\nGo back to the spreadsheet of responses, and fill in the Added to NASA/NMFS 2i2c hub column with the date you added them.\n\n\n\nDirections for workshop participants\n\nPlease go to:\n\n\nNASA: https://github.com/nasa-openscapes-workshops\nNMFS: https://github.com/nmfs-openscapes\n\n\nClick the big yellow bar that says “you’ve been invited” \nNot seeing that bar? \n\nAre you logged into GitHub.com?\nHave you shared your GitHub username via the Google Form (NASA/NOAA)?\nYou can also check your email that you use for GitHub and look for an invitation from GitHub and Openscapes"
  },
  {
    "objectID": "github-access.html#troubleshooting",
    "href": "github-access.html#troubleshooting",
    "title": "GitHub-based Access",
    "section": "Troubleshooting",
    "text": "Troubleshooting\n\nUsers get 403 error\nThis is a common issue. User must find email notification from GitHub and accept invitation. If they had clicked in email to accept but did not complete accepting in GitHub, edit their invitation in GitHub to uninvite and reinvite. They should get a new email to accept.\n\n\n\n\n\n\n\nDidn’t get email\nGo to https://github.com/nasa-openscapes-workshops, see the big yellow bar that says You’re invited. \n\n\nNotes on process and any issues\nYuvi has started documenting the issues we are running into here -&gt; https://hackmd.io/tWfqVai4SDC1CbQ4mhfIbw"
  },
  {
    "objectID": "data-storage.html",
    "href": "data-storage.html",
    "title": "Data Storage Policies",
    "section": "",
    "text": "Storing large amounts of data in the cloud can incur significant ongoing costs if not done optimally. We are charged daily for data stored in our Hub. We are developing technical strategies and policies to reduce storage costs that will keep the Openscapes 2i2c Hub a shared resource for us all to use, while also providing reusable strategies for other admins.\nThe Hub uses an EC2 compute instance, with the $HOME directory (/users/jovyan/ in python images and /users/rstudio/ in R images) mounted to AWS Elastic File System (EFS) storage. This drive is really handy because it is persistent across server restarts and is a great place to store your code. However the $HOME directory should not be used to store data, as it is very expensive, and can also be quite slow to read from and write to.\nTo that end, the Hub provides every user access to two AWS S3 buckets - a “scratch” bucket for short-term storage, and a “persistent” bucket for longer-term storage. AWS S3 buckets are like online storage containers, accessible through the internet, where you can store and retrieve files. S3 buckets have fast read/write, and storage costs are relatively inexpensive compared to storing in your $HOME directory. All major cloud providers provide a similar storage service - S3 is Amazon’s version, while Google provides “Google Cloud Storage”, and Microsoft provides “Azure Blob Storage”.\nThese buckets are accessible only when you are working inside the Hub; you can access them using the environment variables:"
  },
  {
    "objectID": "data-storage.html#data-retention-and-archiving-policy",
    "href": "data-storage.html#data-retention-and-archiving-policy",
    "title": "Data Storage Policies",
    "section": "Data retention and archiving policy",
    "text": "Data retention and archiving policy\nUser $HOME directories will be retained for six months after their last use. After a home directory has been idle for six months, it will be archived to our “archive” S3 bucket, and removed. If a user requests their archive back, an admin can restore it for them.\nOnce a user’s home directory archive has been sitting in the archive for an additional six months, it will be permanently removed from the archive. After this it can no longer be retrieved. \nIn addition to these policies, admins will keep an eye on the Home Directory Usage Dashboard in Grafana. When a user’s home directory increases in size to over 100GB, we will contact them and work with them to reduce the size of their home directory - by removing large unnecessary files, and moving the rest to the appropriate S3 bucket (e.g., $PERSISTENT_BUCKET).\n\nThe _shared directory\nThe _shared directory is a place where instructors can put workshop materials for participants to access. It is mounted as /home/jovyan/shared, and is read only for all users. For those with admin access to the Hub, it is also mounted as a writeable directory as /home/jovyan/shared-readwrite.\nThis directory will follow the same policies as users’ home directories: after six months, contents will be archived to the “archive” S3 bucket (more below). After an additional six months, the archive will be deleted."
  },
  {
    "objectID": "data-storage.html#how-to-archive-old-home-directories-admin",
    "href": "data-storage.html#how-to-archive-old-home-directories-admin",
    "title": "Data Storage Policies",
    "section": "How to archive old home directories (admin)",
    "text": "How to archive old home directories (admin)\nTo start, you will need to be an admin of the Openscapes Jupyterhub so that the allusers directory is mounted in your home directory. This will contain all users’ home directories, and you will have full read-write access.\n\nFinding large $HOME directories\nLook at the Home Directory Usage Dashboard in Grafana to see the directories that haven’t been used in a long time and/or are very large.\nYou can also view and sort users’ directories by size in the Hub with the following command, though this takes a while because it has to summarize a lot of files and directories. This will show the 30 largest home directories:\ndu -h --max-depth=1 /home/jovyan/allusers/ | sort -hr | head -n 30\n\n\nAuthenticate with S3 archive bucket\nWe have created an AWS IAM user called archive-homedirs with appropriate permissions to write to the openscapeshub-prod-homedirs-archive bucket. Get access keys for this user from the AWS console, and use these keys to authenticate in the Hub:\nIn the terminal, type:\nawsv2 configure\nEnter the access key and secret key at the prompts, and set default region to us-west-2.\nYou will also need to temporarily unset some AWS environment variables that have been configured to authenticate with NASA S3 storage. (These will be reset the next time you log in):\nunset AWS_ROLE_ARN\nunset AWS_WEB_IDENTITY_TOKEN_FILE\nTest to make sure you can access the archive bucket:\n# test s3 access:\nawsv2 s3 ls s3://openscapeshub-prod-homedirs-archive/archives/\ntouch test123.txt\nawsv2 s3 mv test123.txt s3://openscapeshub-prod-homedirs-archive/archives/\nawsv2 s3 rm s3://openscapeshub-prod-homedirs-archive/archives/test123.txt\n\n\nSetting up and running the archive script\nWe use a python script, developed by @yuvipanda, that reproducibly archives a list of users’ directories into a specified S3 bucket.\nCopy the script into your home directory in the Hub.\nIn the Hub as of 2024-05-17, a couple of dependencies for the script are missing; you can install them before running the script:\npip install escapism\n\n# I had solver errors with pigz so needed to use the classic solver. \n# Also, the installation of pigz required a machine with &gt;= 3.7GB memory\nconda install pigz --solver classic\nCreate a text file, with one username per line, of users’ home directories you would like to archive to s3. It will look like:\nusername1\nusername2\n# etc...\nFinally, run the script from the terminal, changing the parameter values as required:\npython3 archive-home-dirs.py \\\n    --archive-name=\"archive-$(date +'%Y-%m-%d')\" \\\n    --basedir=/home/jovyan/allusers/ \\\n    --bucket-name=openscapeshub-prod-homedirs-archive \\\n    --object-prefix=\"archives/\" \\\n    --usernames-file=users-to-archive.txt \\\n    --temp-path=/home/jovyan/archive-staging/\nOmitted in the above example, but available to use, is the --delete flag, which will delete the users’ home directory once the archive is completed.\nIf you don’t use the --delete flag, first verify that the archive was successfully completed and then remove the user’s home directory manually.\n\n\nArchiving the shared directory\nYou can use the same script to archive directories in the shared directory, by modifying the inputs slightly:\n\nSet --basedir=/home/jovyan/shared/, (or --basedir=/home/jovyan/shared-readwrite/ if you want to be able use the --delete flag).\nCreate a file with a list of directories in the shared directory you want to archive, and pass it to the --usernames-file argument.\nSet --object-prefix=\"archives/_shared/ to put the archives in the _shared subdirectory in the archive bucket.\n\nE.g.:\npython3 archive-home-dirs.py \\\n    --archive-name=\"archive-$(date +'%Y-%m-%d')\" \\\n    --basedir=/home/jovyan/shared/ \\\n    --bucket-name=openscapeshub-prod-homedirs-archive \\\n    --object-prefix=\"archives/_shared/\" \\\n    --usernames-file=/home/jovyan/shared-to-archive.txt \\\n    --temp-path=/home/jovyan/archive-staging/\nBy default, archives (.tar.gz) are created in your /tmp directory before upload to the S3 bucket. The /tmp directory is cleared out when you shut down the Hub. However, /tmp has limited space (80GB shared by up to four users on a single node), so if you are archiving many large directories, you will likely need to specify a location in your $HOME directory by passing a path to the --temp-path argument. The script will endeavour to clean up after itself and remove the tar.gz file after uploading, but double check that directory when you are finished or you may have copies of all of the other user directories in your own $HOME!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": " Openscapes JupyterHub Access ",
    "section": "",
    "text": "Openscapes JupyterHub Access \n\nOpenscapes supports organizations that are starting to explore cloud computing by partnering with 2i2c, who design and administer a global network of community hubs. The purpose of Openscapes JupyterHubs is to provide initial, exploratory experiences with cloud computing, and to provide a platform for running workshops. It is not meant to be a long-term solution to support on-going science work or software development.\nAccess the login page for your organization below:\n\n\n\n\n\n\n\n\n\nNASA-Openscapes Hub Login\n\n\n\n\n\nNMFS-Openscapes Hub Login"
  },
  {
    "objectID": "fledging.html",
    "href": "fledging.html",
    "title": "Fledging",
    "section": "",
    "text": "Fledging is a goal of these JupyterHubs, so that users who have had success and want to continue their adventures in cloud computing, have the knowledge and resources to develop their own solutions.\nHere is a presentation on fledging given at the Earth Science Information Partners (ESIP) conference in July, 2024.\nMore resources coming soon…"
  }
]